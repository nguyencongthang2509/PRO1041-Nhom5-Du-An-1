/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package core.view;

import com.github.lgooddatepicker.components.TimePicker;
import core.quanly.service.impl.KMSanPhamImpl;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import core.quanly.service.KhuyenMaiService;
import core.quanly.service.impl.KhuyenMaiImpl;
import core.quanly.viewmodel.KhuyenMaiResponse;
import domainmodels.KhuyenMai;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import core.quanly.service.KMSanPhamService;
import core.quanly.viewmodel.KMChiTietSPResponse;
import core.quanly.viewmodel.KMSanphamDangKmReponse;
import core.quanly.viewmodel.KMSanphamReponse;
import domainmodels.ChiTietSP;
import domainmodels.ChiTietSPKhuyenMai;
import java.math.BigDecimal;
import java.text.DateFormat;
import java.time.Instant;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.Calendar;

/**
 *
 * @author thangncph26123
 */
public class ViewKhuyenMai extends javax.swing.JPanel {

    /**
     * Creates new form ViewKhuyenMai
     */
    DefaultTableModel modelsanpham = new DefaultTableModel();
    DefaultTableModel modelkhuyenmai = new DefaultTableModel();
    DefaultTableModel modelsanphamdangkm = new DefaultTableModel();
    DefaultComboBoxModel modelloaikhuyenmai;
    DefaultComboBoxModel modelcobsanpham;
    KMSanPhamService sanPhamService = new KMSanPhamImpl();
    KhuyenMaiService khuyenMaiService = new KhuyenMaiImpl();
    List<KhuyenMaiResponse> listkhuyenmai = new ArrayList<>();
    List<KMChiTietSPResponse> listsanpham = new ArrayList<>();
    List<KMSanphamDangKmReponse> listsanpham2 = new ArrayList<>();
    List<String> listcobsanpham = new ArrayList<>();
    boolean selected = false;
    int count = 0;

    public ViewKhuyenMai() {
        initComponents();
        modelsanpham = (DefaultTableModel) tblsanpham.getModel();
        modelkhuyenmai = (DefaultTableModel) tblkhuyenmai.getModel();
        modelsanphamdangkm = (DefaultTableModel) tblsanpham2.getModel();
        modelcobsanpham = (DefaultComboBoxModel) cobtensanpham.getModel();
        FillToCobSanpham();
        listsanpham = khuyenMaiService.getAllChiTietSP();
        FillToSanPham(listsanpham);
        listkhuyenmai = khuyenMaiService.GetKhuyenMaiDangDienRa();
        FillToKhuyenMai(listkhuyenmai);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtMoTa = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        dtpngaybatdau = new com.github.lgooddatepicker.components.DateTimePicker();
        dtpngayketthuc = new com.github.lgooddatepicker.components.DateTimePicker();
        btnsua = new javax.swing.JButton();
        btnthem = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtgiamgia = new javax.swing.JTextField();
        cobgiamgia = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        txttenkm = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtmakm = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblsanpham = new javax.swing.JTable();
        chkselectedall = new javax.swing.JCheckBox();
        cobtensanpham = new javax.swing.JComboBox<>();
        btnxoa = new javax.swing.JButton();
        btnhuy = new javax.swing.JButton();
        tbpkhuyenmai = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblkhuyenmai = new javax.swing.JTable();
        txttim = new javax.swing.JTextField();
        cobtrangthaikhuyenmai = new javax.swing.JComboBox<>();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblsanpham2 = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(1292, 784));
        setMinimumSize(new java.awt.Dimension(1292, 784));
        setPreferredSize(new java.awt.Dimension(1292, 784));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Chương trình khuyến mại"));
        jPanel2.setPreferredSize(new java.awt.Dimension(1292, 784));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setMaximumSize(new java.awt.Dimension(1209, 468));
        jPanel3.setMinimumSize(new java.awt.Dimension(1209, 468));
        jPanel3.setPreferredSize(new java.awt.Dimension(1209, 454));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Thời gian sử dụng"));

        jLabel5.setText("Thời gian bắt đầu giảm giá");

        jLabel7.setText("Thời gian kết thúc giảm giá");

        txtMoTa.setColumns(20);
        txtMoTa.setRows(5);
        txtMoTa.setText("Khong co mo ta");
        jScrollPane3.setViewportView(txtMoTa);

        jLabel8.setText("Mô tả");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dtpngayketthuc, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dtpngaybatdau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {dtpngaybatdau, dtpngayketthuc});

        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addGap(3, 3, 3)
                .addComponent(dtpngaybatdau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dtpngayketthuc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnsua.setText("Sửa");
        btnsua.setBackground(new java.awt.Color(153, 204, 255));
        btnsua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsuaActionPerformed(evt);
            }
        });

        btnthem.setText("Thêm");
        btnthem.setBackground(new java.awt.Color(153, 204, 255));
        btnthem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnthemActionPerformed(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Thiết lập khuyến mại"));

        jLabel4.setText("Mức giảm giá");

        cobgiamgia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Giam theo %", "Giam theo số tiền" }));

        jLabel3.setText("Hình thức giảm giá");

        jLabel2.setText("Tên khuyến mại");

        txtmakm.setEnabled(false);

        jLabel1.setText("Mã khuyến mại");

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Sản phẩm chưa áp dụng khuyến mại"));

        tblsanpham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Select", "Mã sản phẩm", "Tên sản phẩm", "Hãng", "Màu sắc", "Size", "Chất liệu"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblsanpham.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblsanpham.getTableHeader().setReorderingAllowed(false);
        tblsanpham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblsanphamMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tblsanpham);
        if (tblsanpham.getColumnModel().getColumnCount() > 0) {
            tblsanpham.getColumnModel().getColumn(1).setResizable(false);
            tblsanpham.getColumnModel().getColumn(2).setResizable(false);
            tblsanpham.getColumnModel().getColumn(3).setResizable(false);
            tblsanpham.getColumnModel().getColumn(5).setResizable(false);
        }

        chkselectedall.setText("Select all");
        chkselectedall.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkselectedallMouseClicked(evt);
            }
        });
        chkselectedall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkselectedallActionPerformed(evt);
            }
        });

        cobtensanpham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cobtensanphamActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(chkselectedall)
                        .addGap(38, 38, 38)
                        .addComponent(cobtensanpham, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane4))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkselectedall)
                    .addComponent(cobtensanpham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(8, 8, 8)
                        .addComponent(txttenkm, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtmakm)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtgiamgia)
                    .addComponent(cobgiamgia, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 39, Short.MAX_VALUE))
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel3, jLabel4});

        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtmakm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtgiamgia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txttenkm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cobgiamgia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        btnxoa.setText("Xóa trắng");
        btnxoa.setBackground(new java.awt.Color(153, 204, 255));
        btnxoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnxoaActionPerformed(evt);
            }
        });

        btnhuy.setBackground(new java.awt.Color(153, 204, 255));
        btnhuy.setText("Hủy");
        btnhuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnhuyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnxoa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnthem, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnsua, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                            .addComponent(btnhuy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(42, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnxoa)
                            .addComponent(btnhuy))
                        .addGap(15, 15, 15)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnthem)
                            .addComponent(btnsua))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.getAccessibleContext().setAccessibleDescription("");

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Dánh sách khuyến mại"));

        tblkhuyenmai.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã khuyến mại", "Tên khuyến mại", "Hình thức giảm giá", "Giảm giá", "Ngày bắt đầu", "Ngày kết thúc", "Mô tả"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblkhuyenmai.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblkhuyenmai.getTableHeader().setReorderingAllowed(false);
        tblkhuyenmai.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblkhuyenmaiMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblkhuyenmai);
        if (tblkhuyenmai.getColumnModel().getColumnCount() > 0) {
            tblkhuyenmai.getColumnModel().getColumn(0).setResizable(false);
            tblkhuyenmai.getColumnModel().getColumn(1).setResizable(false);
            tblkhuyenmai.getColumnModel().getColumn(2).setResizable(false);
            tblkhuyenmai.getColumnModel().getColumn(3).setResizable(false);
            tblkhuyenmai.getColumnModel().getColumn(4).setResizable(false);
            tblkhuyenmai.getColumnModel().getColumn(5).setResizable(false);
        }

        txttim.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txttimCaretUpdate(evt);
            }
        });
        txttim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttimActionPerformed(evt);
            }
        });

        cobtrangthaikhuyenmai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Đang diễn ra", "Sắp diễn ra", "Đã hết hạn" }));
        cobtrangthaikhuyenmai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cobtrangthaikhuyenmaiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(txttim, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cobtrangthaikhuyenmai, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 652, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txttim, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cobtrangthaikhuyenmai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        tbpkhuyenmai.addTab("Danh sách khuyến mại", jPanel6);

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));

        tblsanpham2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Select", "Mã sản phẩm", "Tên sản phẩm", "Hãng ", "Màu sắc", "Size", "Chất liệu"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblsanpham2.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tblsanpham2);
        if (tblsanpham2.getColumnModel().getColumnCount() > 0) {
            tblsanpham2.getColumnModel().getColumn(0).setResizable(false);
            tblsanpham2.getColumnModel().getColumn(1).setResizable(false);
            tblsanpham2.getColumnModel().getColumn(2).setResizable(false);
            tblsanpham2.getColumnModel().getColumn(3).setResizable(false);
            tblsanpham2.getColumnModel().getColumn(4).setResizable(false);
        }

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1178, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)
                .addContainerGap())
        );

        tbpkhuyenmai.addTab("Danh sách sản phẩm đã áp dụng khuyến mại", jPanel7);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tbpkhuyenmai, javax.swing.GroupLayout.PREFERRED_SIZE, 1207, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tbpkhuyenmai)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 1252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 774, Short.MAX_VALUE)
                .addGap(5, 5, 5))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblkhuyenmaiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblkhuyenmaiMouseClicked
        try {
            int index = tblkhuyenmai.getSelectedRow();
            KhuyenMaiResponse khuyenMaiResponse = listkhuyenmai.get(index);
            if (index >= 0) {
                txtmakm.setText(khuyenMaiResponse.getMakm());
                txttenkm.setText(khuyenMaiResponse.getTenkm());
                txtgiamgia.setText(khuyenMaiResponse.getGiaTri() + "");
                Date ngaybatdau = khuyenMaiResponse.getNgayBatDau();
                Instant instant1 = ngaybatdau.toInstant();
                LocalDateTime localDateTime1 = LocalDateTime.ofInstant(instant1, ZoneId.systemDefault());
                Date ngayketthuc = khuyenMaiResponse.getNgayKetThuc();
                Instant instant2 = ngayketthuc.toInstant();
                LocalDateTime localDateTime2 = LocalDateTime.ofInstant(instant2, ZoneId.systemDefault());
                dtpngaybatdau.setDateTimePermissive(localDateTime1);
                dtpngayketthuc.setDateTimePermissive(localDateTime2);
                if (khuyenMaiResponse.getLoaiKhuyenMai().equals(0)) {
                    cobgiamgia.setSelectedIndex(0);
                } else {
                    cobgiamgia.setSelectedIndex(1);
                }
            }
//            tbpkhuyenmai.setSelectedIndex(1);
            listsanpham2 = khuyenMaiService.GetAllSanPhamDangApDung(khuyenMaiResponse.getIdkm());
            FillToSanPhamDangKM(listsanpham2);
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_tblkhuyenmaiMouseClicked

    private void btnthemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnthemActionPerformed
        try {
            if (dtpngaybatdau.datePicker.toString().trim().isEmpty() ) {
                JOptionPane.showMessageDialog(this, "Hãy nhập thời gian bắt đầu khuyến mại");
                return;
            }
            if(dtpngaybatdau.timePicker.toString().trim().isEmpty()){
               JOptionPane.showMessageDialog(this, "Hãy nhập giờ bắt đầu khuyến mại");
                return; 
            }
            if (dtpngayketthuc.datePicker.toString().trim().isEmpty() ) {
                JOptionPane.showMessageDialog(this, "Hãy nhập thời gian kết thúc khuyến mại");
                return;
            }
            if(dtpngayketthuc.timePicker.toString().trim().isEmpty()){
               JOptionPane.showMessageDialog(this, "Hãy nhập giờ kết thúc khuyến mại");
                return; 
            }
            
            LocalDateTime time1 = dtpngaybatdau.getDateTimePermissive();
            LocalDateTime time2 = dtpngayketthuc.getDateTimePermissive();
            System.out.println(time1);
            String t1 = String.valueOf(time1);
            String t2 = String.valueOf(time2);
            String array1[] = t1.split("T");
            String arrayDaoChuoi[] = array1[0].split("-");
            String ngayDao = arrayDaoChuoi[2] + "-" + arrayDaoChuoi[1] + "-" + arrayDaoChuoi[0];

            String timeDau = ngayDao + " " + array1[1];

            String array2[] = t2.split("T");
            String arrayDaoChuoi2[] = array2[0].split("-");
            String ngayDao2 = arrayDaoChuoi2[2] + "-" + arrayDaoChuoi2[1] + "-" + arrayDaoChuoi2[0];
            String timeCuoi = ngayDao2 + " " + array2[1];

            SimpleDateFormat fomat = new SimpleDateFormat("dd-MM-yyyy hh:mm");
            
            Date ngaybatdau = fomat.parse(timeDau);
            Date ngayketthuc = fomat.parse(timeCuoi);
            
            if (ngaybatdau.getTime() > ngayketthuc.getTime()) {
                JOptionPane.showMessageDialog(this, "Ngày giờ kết thúc không hợp lệ");
                return;
            } 
            
            if (txttenkm.getText().trim().isEmpty()
                    || txtgiamgia.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Không được để trống");
                return;
            }
            if (cobgiamgia.getSelectedIndex() == 0) {
                if (Double.parseDouble(txtgiamgia.getText().trim()) < 0 || Double.parseDouble(txtgiamgia.getText().trim()) > 100) {
                    JOptionPane.showMessageDialog(this, "Giá trị phần trăm phải > 0 và <= 100");
                    return;
                }
            }
            if (Double.parseDouble(txtgiamgia.getText().trim()) < 0) {
                JOptionPane.showMessageDialog(this, "Giá trị giảm giá không được âm");
                return;
            }
            
            if (txttenkm.getText().trim().length() > 100) {
                JOptionPane.showMessageDialog(this, "Tên khuyến mại không quá 100 kí tự");
                return;
            }
            
            String makm = String.valueOf(khuyenMaiService.GenMaKhuyenMai());
            KhuyenMai khuyenMai = new KhuyenMai();
            khuyenMai.setMa("KM00" + makm);
            khuyenMai.setTen(txttenkm.getText().trim());
            khuyenMai.setLoaiKhuyenMai(cobgiamgia.getSelectedIndex());
            khuyenMai.setGiaTri(Double.parseDouble(txtgiamgia.getText().trim()));
            khuyenMai.setNgayBatDau(ngaybatdau);
            khuyenMai.setNgayKetThuc(ngayketthuc);
            khuyenMai.setMoTa(txtMoTa.getText().trim());
            khuyenMaiService.saveOrUpdateKM(khuyenMai);

            List<KMChiTietSPResponse> listSelected = GetSelected();
            for (KMChiTietSPResponse xx : listSelected) {
                ChiTietSPKhuyenMai chiTietSPKhuyenMai = new ChiTietSPKhuyenMai();
                ChiTietSP chiTietSP = khuyenMaiService.findChiTietSpById(xx.getId());
                chiTietSPKhuyenMai.setChiTietSPId(chiTietSP);
                chiTietSPKhuyenMai.setKhuyenMaiId(khuyenMai);
                chiTietSPKhuyenMai.setDonGia(chiTietSP.getGiaBan());
                chiTietSPKhuyenMai.setTrangThai(0);
                if (khuyenMai.getLoaiKhuyenMai() == 0) {
                    BigDecimal donGiaConLai = chiTietSP.getGiaBan().subtract(chiTietSP.getGiaBan().multiply(new BigDecimal(khuyenMai.getGiaTri()).divide(new BigDecimal(100))));
                    chiTietSPKhuyenMai.setDonGiaConLai(donGiaConLai);
                } else {
                    BigDecimal donGiaConLai = chiTietSP.getGiaBan().subtract(new BigDecimal(khuyenMai.getGiaTri()));
                    chiTietSPKhuyenMai.setDonGiaConLai(donGiaConLai);
                }
                khuyenMaiService.saveOrUpdate(chiTietSPKhuyenMai);
            }

            listsanpham = khuyenMaiService.FindSanPhamByTen(cobtensanpham.getSelectedItem());
            FillToSanPham(listsanpham);
            if (cobtrangthaikhuyenmai.getSelectedIndex() == 0) {
                listkhuyenmai = khuyenMaiService.GetKhuyenMaiDangDienRa();
            } else if (cobtrangthaikhuyenmai.getSelectedIndex() == 1) {
                listkhuyenmai = khuyenMaiService.GetKhuyenMaiSapDienRa();
            } else {
                listkhuyenmai = khuyenMaiService.GetKhuyenMaiDaDienRa();
            }

            FillToKhuyenMai(listkhuyenmai);
            JOptionPane.showMessageDialog(this, "Tạo chương trình khuyến mại thành công");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnthemActionPerformed

    private void txttimCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txttimCaretUpdate
        String input = txttim.getText();
        if (cobtrangthaikhuyenmai.getSelectedIndex() == 0) {
            if (txttim.getText().trim().equals("khuyen mai theo %")) {
                txttim.setText("0");
            }
            if (txttim.getText().trim().equals("khuyen mai theo so tien")) {
                txttim.setText("1");
            }
            listkhuyenmai = khuyenMaiService.FindMaOrTenByInputDangDienRa(input);
            FillToKhuyenMai(listkhuyenmai);
        } else if (cobtrangthaikhuyenmai.getSelectedIndex() == 1) {
            listkhuyenmai = khuyenMaiService.FindMaOrTenByInputSapDienRa(input);
            FillToKhuyenMai(listkhuyenmai);
        } else {
            listkhuyenmai = khuyenMaiService.FindMaOrTenByInputDaDienRa(input);
            FillToKhuyenMai(listkhuyenmai);
        }
    }//GEN-LAST:event_txttimCaretUpdate

    private void btnsuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsuaActionPerformed
        try {
            LocalDateTime time1 = dtpngaybatdau.getDateTimePermissive();
            LocalDateTime time2 = dtpngayketthuc.getDateTimePermissive();
            System.out.println(time1);
            String t1 = String.valueOf(time1);
            String t2 = String.valueOf(time2);
            String array1[] = t1.split("T");
            String arrayDaoChuoi[] = array1[0].split("-");
            String ngayDao = arrayDaoChuoi[2] + "-" + arrayDaoChuoi[1] + "-" + arrayDaoChuoi[0];

            String timeDau = ngayDao + " " + array1[1];

            String array2[] = t2.split("T");
            String arrayDaoChuoi2[] = array2[0].split("-");
            String ngayDao2 = arrayDaoChuoi2[2] + "-" + arrayDaoChuoi2[1] + "-" + arrayDaoChuoi2[0];
            String timeCuoi = ngayDao2 + " " + array2[1];

            SimpleDateFormat fomat = new SimpleDateFormat("dd-MM-yyyy hh:mm");
            Date ngaybatdau = fomat.parse(timeDau);
            Date ngayketthuc = fomat.parse(timeCuoi);
            int index = tblkhuyenmai.getSelectedRow();
            if (index == -1) {
                JOptionPane.showMessageDialog(this, "ban chua Chọn dòng");
                return;
            }
            if (txttenkm.getText().trim().isEmpty()
                    || txtgiamgia.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Không được để trống");
                return;
            }
            if (cobgiamgia.getSelectedIndex() == 0) {
                if (Double.parseDouble(txtgiamgia.getText().trim()) < 0 || Double.parseDouble(txtgiamgia.getText().trim()) > 100) {
                    JOptionPane.showMessageDialog(this, "Giá trị phần trăm phải > 0 và <= 100");
                    return;
                }
            }
            if (Double.parseDouble(txtgiamgia.getText().trim()) < 0) {
                JOptionPane.showMessageDialog(this, "Giá trị giảm giá không được âm");
                return;
            }
            if (ngaybatdau.getTime() > ngayketthuc.getTime()) {
                JOptionPane.showMessageDialog(this, "Ngày kết thúc không hợp lệ");
                return;
            }
            if (txttenkm.getText().trim().length() > 100) {
                JOptionPane.showMessageDialog(this, "Tên khuyến mại không quá 100 kí tự");
                return;
            }
            KhuyenMai khuyenMai = new KhuyenMai();
            khuyenMai.setId(listkhuyenmai.get(index).getIdkm());
            System.out.println(khuyenMai.getId());
            khuyenMai.setMa(txtmakm.getText().trim());
            khuyenMai.setTen(txttenkm.getText().trim());
            khuyenMai.setLoaiKhuyenMai(cobgiamgia.getSelectedIndex());
            khuyenMai.setGiaTri(Double.parseDouble(txtgiamgia.getText().trim()));
            khuyenMai.setNgayBatDau(ngaybatdau);
            khuyenMai.setNgayKetThuc(ngayketthuc);
            khuyenMai.setMoTa(txtMoTa.getText().trim());
            khuyenMaiService.saveOrUpdateKM(khuyenMai);
            List<KMChiTietSPResponse> listSelected = GetSelected();
            for (KMChiTietSPResponse xx : listSelected) {
                ChiTietSPKhuyenMai chiTietSPKhuyenMai = new ChiTietSPKhuyenMai();
                ChiTietSP chiTietSP = khuyenMaiService.findChiTietSpById(xx.getId());
                chiTietSPKhuyenMai.setChiTietSPId(chiTietSP);
                chiTietSPKhuyenMai.setKhuyenMaiId(khuyenMai);
                chiTietSPKhuyenMai.setDonGia(chiTietSP.getGiaBan());
                chiTietSPKhuyenMai.setTrangThai(0);
                if (khuyenMai.getLoaiKhuyenMai() == 0) {
                    BigDecimal donGiaConLai = chiTietSP.getGiaBan().subtract(chiTietSP.getGiaBan().multiply(new BigDecimal(khuyenMai.getGiaTri()).divide(new BigDecimal(100))));
                    chiTietSPKhuyenMai.setDonGiaConLai(donGiaConLai);
                } else {
                    BigDecimal donGiaConLai = chiTietSP.getGiaBan().subtract(new BigDecimal(khuyenMai.getGiaTri()));
                    chiTietSPKhuyenMai.setDonGiaConLai(donGiaConLai);
                }
                khuyenMaiService.saveOrUpdate(chiTietSPKhuyenMai);
            }
            listsanpham = khuyenMaiService.FindSanPhamByTen(cobtensanpham.getSelectedItem());
            FillToSanPham(listsanpham);
            if (cobtrangthaikhuyenmai.getSelectedIndex() == 0) {
                listkhuyenmai = khuyenMaiService.GetKhuyenMaiDangDienRa();
            } else if (cobtrangthaikhuyenmai.getSelectedIndex() == 1) {
                listkhuyenmai = khuyenMaiService.GetKhuyenMaiSapDienRa();
            } else {
                listkhuyenmai = khuyenMaiService.GetKhuyenMaiDaDienRa();
            }
            FillToKhuyenMai(listkhuyenmai);

            KhuyenMaiResponse khuyenMaiResponse = listkhuyenmai.get(index);
            listsanpham2 = khuyenMaiService.GetAllSanPhamDangApDung(khuyenMaiResponse.getIdkm());
            FillToSanPhamDangKM(listsanpham2);
            JOptionPane.showMessageDialog(this, "Sửa chương trình khuyến mại thành công");

        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_btnsuaActionPerformed

    private void chkselectedallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkselectedallActionPerformed
        if (!selected) {
            for (int i = 0; i < listsanpham.size(); i++) {
                tblsanpham.setValueAt(true, i, 0);
            }
            selected = true;
        } else {
            for (int i = 0; i < listsanpham.size(); i++) {
                tblsanpham.setValueAt(false, i, 0);
            }
            selected = false;
        }
    }//GEN-LAST:event_chkselectedallActionPerformed

    private void chkselectedallMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkselectedallMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_chkselectedallMouseClicked

    private void tblsanphamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblsanphamMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblsanphamMouseClicked

    private void cobtrangthaikhuyenmaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cobtrangthaikhuyenmaiActionPerformed
        if (cobtrangthaikhuyenmai.getSelectedIndex() == 0) {

            btnsua.setEnabled(true);
            btnthem.setEnabled(true);
            listkhuyenmai = khuyenMaiService.GetKhuyenMaiDangDienRa();
            FillToKhuyenMai(listkhuyenmai);

        } else if (cobtrangthaikhuyenmai.getSelectedIndex() == 1) {
            btnsua.setEnabled(true);
            btnthem.setEnabled(true);
            listkhuyenmai = khuyenMaiService.GetKhuyenMaiSapDienRa();
            FillToKhuyenMai(listkhuyenmai);

        } else {
            btnsua.setEnabled(false);
            btnthem.setEnabled(false);
            listkhuyenmai = khuyenMaiService.GetKhuyenMaiDaDienRa();
            FillToKhuyenMai(listkhuyenmai);
        }
    }//GEN-LAST:event_cobtrangthaikhuyenmaiActionPerformed

    private void txttimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttimActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txttimActionPerformed

    private void cobtensanphamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cobtensanphamActionPerformed
        listsanpham = khuyenMaiService.FindSanPhamByTen(cobtensanpham.getSelectedItem());
        FillToSanPham(listsanpham);
    }//GEN-LAST:event_cobtensanphamActionPerformed

    private void btnxoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnxoaActionPerformed
        Clear();
    }//GEN-LAST:event_btnxoaActionPerformed

    private void btnhuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnhuyActionPerformed
        List<KMSanphamDangKmReponse> listSelectedsanphamkm = GetSelectedsanphamkm();
            for (KMSanphamDangKmReponse xx : listSelectedsanphamkm) {
                System.out.println(xx.getIdctspkm());
                khuyenMaiService.HuyKhuyenMai(xx.getIdctspkm());
            }
        int index = tblkhuyenmai.getSelectedRow();    
        listsanpham = khuyenMaiService.getAllChiTietSP();
        FillToSanPham(listsanpham);
        listkhuyenmai = khuyenMaiService.GetKhuyenMaiDangDienRa();
        FillToKhuyenMai(listkhuyenmai);  
        KhuyenMaiResponse khuyenMaiResponse = listkhuyenmai.get(index);
        listsanpham2 = khuyenMaiService.GetAllSanPhamDangApDung(khuyenMaiResponse.getIdkm());
        FillToSanPhamDangKM(listsanpham2);
    }//GEN-LAST:event_btnhuyActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnhuy;
    private javax.swing.JButton btnsua;
    private javax.swing.JButton btnthem;
    private javax.swing.JButton btnxoa;
    private javax.swing.JCheckBox chkselectedall;
    private javax.swing.JComboBox<String> cobgiamgia;
    private javax.swing.JComboBox<String> cobtensanpham;
    private javax.swing.JComboBox<String> cobtrangthaikhuyenmai;
    private com.github.lgooddatepicker.components.DateTimePicker dtpngaybatdau;
    private com.github.lgooddatepicker.components.DateTimePicker dtpngayketthuc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable tblkhuyenmai;
    private javax.swing.JTable tblsanpham;
    private javax.swing.JTable tblsanpham2;
    private javax.swing.JTabbedPane tbpkhuyenmai;
    private javax.swing.JTextArea txtMoTa;
    private javax.swing.JTextField txtgiamgia;
    private javax.swing.JTextField txtmakm;
    private javax.swing.JTextField txttenkm;
    private javax.swing.JTextField txttim;
    // End of variables declaration//GEN-END:variables

    private void FillToSanPham(List<KMChiTietSPResponse> list) {
        modelsanpham.setRowCount(0);
        for (KMChiTietSPResponse xx : listsanpham) {
            modelsanpham.addRow(xx.toDaTaRow());
        }
    }

    private void FillToKhuyenMai(List<KhuyenMaiResponse> list) {
        modelkhuyenmai.setRowCount(0);
        for (KhuyenMaiResponse x : list) {
            modelkhuyenmai.addRow(x.ToDaTa1());
        }
    }

    private void FillToCobSanpham() {

        listcobsanpham = khuyenMaiService.SelectTenSanPham();
        for (String x : listcobsanpham) {
            modelcobsanpham.addElement(x);
        }
    }

    private void FillToSanPhamDangKM(List<KMSanphamDangKmReponse> list) {
        modelsanphamdangkm.setRowCount(0);
        for (KMSanphamDangKmReponse xx : list) {
            Object[] row = new Object[]{false,  xx.getMa(), xx.getTen(), xx.getTenhang(), xx.getMausac(), xx.getKichthuoc(), xx.getChatlieu()};
            modelsanphamdangkm.addRow(row);
        }
    }

    private List<KMChiTietSPResponse> GetSelectedAll() {
        listsanpham = khuyenMaiService.getAllChiTietSP();
        for (int i = 0; i < listsanpham.size(); i++) {
            String id = tblsanpham.getValueAt(i, 0).toString();
            String ma = tblsanpham.getValueAt(i, 1).toString();
            String ten = tblsanpham.getValueAt(i, 2).toString();
            String hang = tblsanpham.getValueAt(i, 3).toString();
            String mausac = tblsanpham.getValueAt(i, 4).toString();
            String kichthuoc = tblsanpham.getValueAt(i, 5).toString();
            String chatlieu = tblsanpham.getValueAt(i, 6).toString();
            tblsanpham.setValueAt(true, i, 0);
            KMChiTietSPResponse chiTietSPResponse = new KMChiTietSPResponse(id, ma, ten, hang, mausac, kichthuoc, chatlieu);
            List<KMChiTietSPResponse> listselectall = new ArrayList<>();
            listselectall.add(chiTietSPResponse);
        }
        return listsanpham;
    }

    private List<KMChiTietSPResponse> GetSelected() {
        List<KMChiTietSPResponse> listselected = new ArrayList<>();
        for (int i = 0; i < listsanpham.size(); i++) {
            boolean check = Boolean.valueOf(tblsanpham.getValueAt(i, 0).toString());
            System.out.println(check);
            if (check) {
                listselected.add(listsanpham.get(i));
            }
        }
        return listselected;
    }
    
    private List<KMSanphamDangKmReponse> GetSelectedsanphamkm() {
        List<KMSanphamDangKmReponse> listselectedsanphamkm = new ArrayList<>();
        for (int i = 0; i < listsanpham2.size(); i++) {
            boolean check = Boolean.valueOf(tblsanpham2.getValueAt(i, 0).toString());
            System.out.println(check);
            if (check) {
                listselectedsanphamkm.add(listsanpham2.get(i));
            }
        }
        return listselectedsanphamkm;
    }

    private void Clear() {
    txttenkm.setText("");
    txtgiamgia.setText("");
    dtpngaybatdau.datePicker.setText("");
    dtpngaybatdau.timePicker.setText("");
    dtpngayketthuc.datePicker.setText("");
    dtpngayketthuc.timePicker.setText("");
    }

}
